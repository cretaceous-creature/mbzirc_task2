<!-- -*- mode: xml -*- -->
<launch>
  <arg name="REMOTE_IP" default="192.168.97.88"/>
  <arg name="LOCAL_IP" default="192.168.96.188"/>
  <arg name="IMAGE_PORT" default="1118"/>
  <arg name="JOY_PORT" default="1119"/>
  <arg name="USE_LARGEDATA" default="false"/>
  <arg name="USE_THROTTLE" default="true"/>

  <arg name="Throttle" value="_Throttle" if="$(arg USE_THROTTLE)"/>
  <arg name="Throttle" value="" unless="$(arg USE_THROTTLE)"/>
  <arg name="throttle" value="_throttle" if="$(arg USE_THROTTLE)"/>
  <arg name="throttle" value="" unless="$(arg USE_THROTTLE)"/>

  <arg name="msg_file" value="mbzirc_task2_network/AERO2Remote$(arg Throttle)_LargeData" if="$(arg USE_LARGEDATA)"/>
  <arg name="msg_file" value="mbzirc_task2_network/AERO2Remote$(arg Throttle)_SmallData" unless="$(arg USE_LARGEDATA)"/>

  <include file="$(find mbzirc_task2_network)/launch/aero_throttle.launch" if="$(arg USE_THROTTLE)"/>

  <group ns="silverhammer">
    <!-- FC to OCS -->
    <node pkg="jsk_network_tools" type="silverhammer_highspeed_streamer.py"
          output="screen"
          name="image_streamer" respawn="true">
      <rosparam subst_value="true">
        message: "$(arg msg_file)"
        to_port: $(arg IMAGE_PORT)
        send_rate: 5
        to_ip: "$(arg REMOTE_IP)"
      </rosparam>

    </node>
    <node pkg="jsk_network_tools" type="silverhammer_highspeed_receiver.py"
          output="screen"
          name="joy_receiver">
      <rosparam subst_value="true">
        message: mbzirc_task2_network/Remote_Joy
        receive_port: $(arg JOY_PORT)
        receive_ip: "$(arg LOCAL_IP)"
        event_driven: true
      </rosparam>
    </node>

  </group>

  <!-- compress images -->
  <group ns="zed">
    <node name="republish_image" type="republish" pkg="image_transport"
          output="screen"
          args="raw in:=/zed/left/image_rect_color$(arg throttle) compressed out:=/zed/left/image_rect_color$(arg throttle)" respawn="true"/>
    <node name="republish_depth" type="republish" pkg="image_transport"
          output="screen"
          args="raw in:=/zed/depth/depth_registered$(arg throttle) compressedDepth out:=/zed/depth/depth_registered$(arg throttle)" respawn="true">
    </node>
  </group>
  <group ns="handeye">
    <node name="republish" type="republish" pkg="image_transport"
          output="screen"
          args="raw in:=/handeye/image_color$(arg throttle) compressed out:=/handeye/image_color$(arg throttle)" respawn="true"/>
  </group>
  <!-- <group ns="image_clipper_panel" if="$(arg USE_LARGEDATA)"> -->
  <!--   <node name="republish" type="republish" pkg="image_transport" -->
  <!--         output="screen" -->
  <!--         args="raw in:=/image_clipper_panel/output compressed out:=/image_clipper_panel/output" respawn="true"/> -->
  <!-- </group> -->
  <group ns="luminance_homogenizer_panel" if="$(arg USE_LARGEDATA)">
    <node name="republish" type="republish" pkg="image_transport"
          output="screen"
          args="raw in:=/luminance_homogenizer_panel/output compressed out:=/luminance_homogenizer_panel/output" respawn="true"/>
  </group>
  <group ns="meanshift_filtering_panel" if="$(arg USE_LARGEDATA)">
    <node name="republish" type="republish" pkg="image_transport"
          output="screen"
          args="raw in:=/meanshift_filtering_panel/output compressed out:=/meanshift_filtering_panel/output" respawn="true"/>
  </group>

  <group ns="wrench_detector">
    <node name="republish" type="republish" pkg="image_transport"
          output="screen"
          args="raw in:=/wrench_detector/image compressed out:=/wrench_detector/image" respawn="true" if="$(arg USE_LARGEDATA)"/>
  </group>

  <group ns="wrench_detector_handeye">
    <node name="republish" type="republish" pkg="image_transport"
          output="screen"
          args="raw in:=/wrench_detector_handeye/image compressed out:=/wrench_detector_handeye/image" respawn="true" if="$(arg USE_LARGEDATA)"/>
  </group>

  <!-- throttle TF -->
  <node name="tf_throttle" type="throttle" pkg="topic_tools" args="messages /tf 5.0 /tf_throttle" />

  <!-- rename joy node -->
  <node name="relay_joy" type="relay" pkg="topic_tools" output="screen" args="/from_fc/joy /joy" />


</launch>
